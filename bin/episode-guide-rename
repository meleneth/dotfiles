#!/usr/bin/env ruby

require 'rubygems'
require 'open-uri'
require 'nokogiri'
require 'json'
require 'awesome_print'
require 'table_print'
require 'find'

$LOAD_PATH << "#{Pathname.new(File.expand_path(__FILE__)).realpath.dirname}"

require 'lib/monkey_patches'
require 'lib/episode_guess'

# next steps: rename related files so subtitles etc work correctly

class FilenameParser
  attr_accessor :season
  attr_accessor :episode
  attr_accessor :filename

  def initialize(filename)
    @filename = filename
    @season = ""
    @episode = ""

    guess = episode_guess(filename)
    if guess then
      @season = guess[:season]
      @episode = guess[:episode]
    end
  end

  def is_video?
    extension.match(/(avi|mkv|mpg|mpeg|m4v|mp4)/)
  end

  def basename
    File.basename @filename
  end

  def extension
    File.extname @filename
  end

  def dirname
    File.dirname @filename
  end
end

filename = ARGV[0]
puts "Reading #{filename}"

file = File.read(filename)
data = JSON.parse(file)

series = File.basename(ARGV[0], ".*")

episodes = Hash.new{ |h,k| h[k] = Hash.new(&h.default_proc) }

data.each do |d|
  episodes[d["season_no"].strip_leading_zeroes][d["episode_no"].strip_leading_zeroes] = d["name"]
end

ap episodes

Find.find('.') do |e|
  next if File.directory? e
  fp = FilenameParser.new e
  next unless fp.is_video?
  puts " mv \"#{fp.filename}\" \"#{fp.dirname}/#{series} - s#{fp.season.padded}e#{fp.episode.padded} - #{episodes[fp.season][fp.episode]}#{fp.extension}\""
end

# vim: ft=ruby
